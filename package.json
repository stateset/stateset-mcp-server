{
  "name": "stateset-mcp-server",
  "version": "1.0.0",
  "description": "Production-ready Model Context Protocol server for StateSet API integration with comprehensive e-commerce operations management",
  "main": "dist/index.js",
  "type": "module",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "tsx watch src/index.ts",
    "build": "tsc && tsc-alias",
    "start": "node dist/index.js",
    "start:dev": "npm run build && npm start",
    "test": "jest --passWithNoTests",
    "test:watch": "jest --watch --passWithNoTests",
    "test:coverage": "jest --coverage --passWithNoTests",
    "test:unit": "jest --testPathPattern=tests/unit --passWithNoTests",
    "test:integration": "jest --testPathPattern=tests/integration --passWithNoTests",
    "test:e2e": "jest --testPathPattern=tests/e2e --passWithNoTests",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "typecheck": "tsc --noEmit",
    "clean": "rimraf dist coverage .tsbuildinfo",
    "docker:build": "docker build -t stateset-mcp-server .",
    "docker:run": "docker run --env-file .env -p 3000:3000 -p 9464:9464 stateset-mcp-server",
    "docker:compose": "docker-compose up -d",
    "docker:compose:dev": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d",
    "docker:compose:monitoring": "docker-compose --profile monitoring up -d",
    "security:audit": "npm audit && npm audit --audit-level=moderate",
    "security:update": "npm update && npm audit fix",
    "docs:generate": "typedoc src --out docs --theme default",
    "release": "standard-version",
    "release:major": "standard-version --release-as major",
    "release:minor": "standard-version --release-as minor",
    "release:patch": "standard-version --release-as patch",
    "health": "curl -f http://localhost:3000/health || exit 1",
    "metrics": "curl -f http://localhost:9464/metrics || exit 1"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "stateset",
    "api",
    "ecommerce",
    "returns",
    "orders",
    "inventory",
    "warranty",
    "rma",
    "typescript",
    "nodejs",
    "production-ready"
  ],
  "author": "StateSet Team <team@stateset.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/stateset/stateset-mcp-server.git"
  },
  "bugs": {
    "url": "https://github.com/stateset/stateset-mcp-server/issues"
  },
  "homepage": "https://github.com/stateset/stateset-mcp-server#readme",
  "files": [
    "dist",
    "README.md",
    "LICENSE",
    "package.json"
  ],
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.6.0",
    "axios": "^1.7.9",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "express-rate-limit": "^7.4.1",
    "helmet": "^8.0.0",
    "pino": "^9.6.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.52.1",
    "@opentelemetry/exporter-prometheus": "^0.56.0",
    "@opentelemetry/resources": "^1.29.0",
    "@opentelemetry/sdk-metrics": "^1.29.0",
    "@opentelemetry/sdk-node": "^0.56.0",
    "@opentelemetry/sdk-trace-node": "^1.29.0",
    "@opentelemetry/semantic-conventions": "^1.29.0",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.5",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.17.0",
    "eslint-config-prettier": "^9.1.0",
    "jest": "^29.7.0",
    "nodemon": "^3.1.9",
    "prettier": "^3.4.2",
    "rimraf": "^6.0.1",
    "standard-version": "^9.5.0",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "tsc-alias": "^1.8.10",
    "tsx": "^4.19.2",
    "typedoc": "^0.27.5",
    "typescript": "^5.7.2",
    "typescript-eslint": "^8.18.2"
  },
  "optionalDependencies": {
    "compression": "^1.7.5"
  },
  "peerDependencies": {
    "typescript": ">=5.0.0"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "standard-version": {
    "scripts": {
      "prebump": "npm run lint && npm run test",
      "prerelease": "npm run build"
    }
  }
}
